// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// RevisionMetadata contains metadata for a specific revision in a Git
    /// repository
    /// </summary>
    public partial class V1alpha1RevisionMetadata
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1RevisionMetadata class.
        /// </summary>
        public V1alpha1RevisionMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1RevisionMetadata class.
        /// </summary>
        /// <param name="author">who authored this revision,
        /// typically their name and email, e.g. "John Doe
        /// &lt;john_doe@my-company.com&gt;",
        /// but might not match this example</param>
        /// <param name="message">Message contains the message associated with
        /// the revision, most likely the commit message.
        /// The message is truncated to the first newline or 64 characters
        /// (which ever comes first)</param>
        /// <param name="signatureInfo">SignatureInfo contains a hint on the
        /// signer if the revision was signed with GPG, and signature
        /// verification is enabled.</param>
        /// <param name="tags">Tags specifies any tags currently attached to
        /// the revision
        /// Floating tags can move from one revision to another</param>
        public V1alpha1RevisionMetadata(string author = default(string), V1Time date = default(V1Time), string message = default(string), string signatureInfo = default(string), IList<string> tags = default(IList<string>))
        {
            Author = author;
            Date = date;
            Message = message;
            SignatureInfo = signatureInfo;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets who authored this revision,
        /// typically their name and email, e.g. "John Doe
        /// &amp;lt;john_doe@my-company.com&amp;gt;",
        /// but might not match this example
        /// </summary>
        [JsonProperty(PropertyName = "author")]
        public string Author { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public V1Time Date { get; set; }

        /// <summary>
        /// Gets or sets message contains the message associated with the
        /// revision, most likely the commit message.
        /// The message is truncated to the first newline or 64 characters
        /// (which ever comes first)
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets signatureInfo contains a hint on the signer if the
        /// revision was signed with GPG, and signature verification is
        /// enabled.
        /// </summary>
        [JsonProperty(PropertyName = "signatureInfo")]
        public string SignatureInfo { get; set; }

        /// <summary>
        /// Gets or sets tags specifies any tags currently attached to the
        /// revision
        /// Floating tags can move from one revision to another
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<string> Tags { get; set; }

    }
}
