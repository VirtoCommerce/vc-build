// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// FieldsV1 stores a set of fields in a data structure like a Trie, in
    /// JSON format.
    ///
    /// Each key is either a '.' representing the field itself, and will always
    /// map to an empty set,
    /// or a string representing a sub-field or item. The string will follow
    /// one of these four formats:
    /// 'f:&lt;name&gt;', where &lt;name&gt; is the name of a field in a
    /// struct, or key in a map
    /// 'v:&lt;value&gt;', where &lt;value&gt; is the exact json formatted
    /// value of a list item
    /// 'i:&lt;index&gt;', where &lt;index&gt; is position of a item in a list
    /// 'k:&lt;keys&gt;', where &lt;keys&gt; is a map of  a list item's key
    /// fields to their unique values
    /// If a key maps to an empty Fields value, the field that key represents
    /// is part of the set.
    ///
    /// The exact format is defined in sigs.k8s.io/structured-merge-diff
    /// +protobuf.options.(gogoproto.goproto_stringer)=false
    /// </summary>
    public partial class V1FieldsV1
    {
        /// <summary>
        /// Initializes a new instance of the V1FieldsV1 class.
        /// </summary>
        public V1FieldsV1()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1FieldsV1 class.
        /// </summary>
        /// <param name="raw">Raw is the underlying serialization of this
        /// object.</param>
        public V1FieldsV1(byte[] raw = default(byte[]))
        {
            Raw = raw;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets raw is the underlying serialization of this object.
        /// </summary>
        [JsonProperty(PropertyName = "Raw")]
        public byte[] Raw { get; set; }

    }
}
