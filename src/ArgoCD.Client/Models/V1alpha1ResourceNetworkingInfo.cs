// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// ResourceNetworkingInfo holds networking resource related information
    /// TODO: describe members of this type
    /// </summary>
    public partial class V1alpha1ResourceNetworkingInfo
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceNetworkingInfo
        /// class.
        /// </summary>
        public V1alpha1ResourceNetworkingInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceNetworkingInfo
        /// class.
        /// </summary>
        /// <param name="externalURLs">ExternalURLs holds list of URLs which
        /// should be available externally. List is populated for ingress
        /// resources using rules hostnames.</param>
        public V1alpha1ResourceNetworkingInfo(IList<string> externalURLs = default(IList<string>), IList<V1LoadBalancerIngress> ingress = default(IList<V1LoadBalancerIngress>), IDictionary<string, string> labels = default(IDictionary<string, string>), IDictionary<string, string> targetLabels = default(IDictionary<string, string>), IList<V1alpha1ResourceRef> targetRefs = default(IList<V1alpha1ResourceRef>))
        {
            ExternalURLs = externalURLs;
            Ingress = ingress;
            Labels = labels;
            TargetLabels = targetLabels;
            TargetRefs = targetRefs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets externalURLs holds list of URLs which should be
        /// available externally. List is populated for ingress resources using
        /// rules hostnames.
        /// </summary>
        [JsonProperty(PropertyName = "externalURLs")]
        public IList<string> ExternalURLs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ingress")]
        public IList<V1LoadBalancerIngress> Ingress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "labels")]
        public IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetLabels")]
        public IDictionary<string, string> TargetLabels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetRefs")]
        public IList<V1alpha1ResourceRef> TargetRefs { get; set; }

    }
}
