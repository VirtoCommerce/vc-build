// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SyncOperation contains details about a sync operation.
    /// </summary>
    public partial class V1alpha1SyncOperation
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1SyncOperation class.
        /// </summary>
        public V1alpha1SyncOperation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1SyncOperation class.
        /// </summary>
        /// <param name="dryRun">DryRun specifies to perform a `kubectl apply
        /// --dry-run` without actually performing the sync</param>
        /// <param name="manifests">Manifests is an optional field that
        /// overrides sync source with a local directory for
        /// development</param>
        /// <param name="prune">Prune specifies to delete resources from the
        /// cluster that are no longer tracked in git</param>
        /// <param name="resources">Resources describes which resources shall
        /// be part of the sync</param>
        /// <param name="revision">Revision is the revision (Git) or chart
        /// version (Helm) which to sync the application to
        /// If omitted, will use the revision specified in app spec.</param>
        /// <param name="syncOptions">SyncOptions provide per-sync
        /// sync-options, e.g. Validate=false</param>
        public V1alpha1SyncOperation(bool? dryRun = default(bool?), IList<string> manifests = default(IList<string>), bool? prune = default(bool?), IList<V1alpha1SyncOperationResource> resources = default(IList<V1alpha1SyncOperationResource>), string revision = default(string), V1alpha1ApplicationSource source = default(V1alpha1ApplicationSource), IList<string> syncOptions = default(IList<string>), V1alpha1SyncStrategy syncStrategy = default(V1alpha1SyncStrategy))
        {
            DryRun = dryRun;
            Manifests = manifests;
            Prune = prune;
            Resources = resources;
            Revision = revision;
            Source = source;
            SyncOptions = syncOptions;
            SyncStrategy = syncStrategy;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets dryRun specifies to perform a `kubectl apply
        /// --dry-run` without actually performing the sync
        /// </summary>
        [JsonProperty(PropertyName = "dryRun")]
        public bool? DryRun { get; set; }

        /// <summary>
        /// Gets or sets manifests is an optional field that overrides sync
        /// source with a local directory for development
        /// </summary>
        [JsonProperty(PropertyName = "manifests")]
        public IList<string> Manifests { get; set; }

        /// <summary>
        /// Gets or sets prune specifies to delete resources from the cluster
        /// that are no longer tracked in git
        /// </summary>
        [JsonProperty(PropertyName = "prune")]
        public bool? Prune { get; set; }

        /// <summary>
        /// Gets or sets resources describes which resources shall be part of
        /// the sync
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public IList<V1alpha1SyncOperationResource> Resources { get; set; }

        /// <summary>
        /// Gets or sets revision is the revision (Git) or chart version (Helm)
        /// which to sync the application to
        /// If omitted, will use the revision specified in app spec.
        /// </summary>
        [JsonProperty(PropertyName = "revision")]
        public string Revision { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public V1alpha1ApplicationSource Source { get; set; }

        /// <summary>
        /// Gets or sets syncOptions provide per-sync sync-options, e.g.
        /// Validate=false
        /// </summary>
        [JsonProperty(PropertyName = "syncOptions")]
        public IList<string> SyncOptions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "syncStrategy")]
        public V1alpha1SyncStrategy SyncStrategy { get; set; }

    }
}
