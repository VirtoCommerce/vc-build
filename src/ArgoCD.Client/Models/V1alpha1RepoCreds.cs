// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// RepoCreds holds the definition for repository credentials
    /// </summary>
    public partial class V1alpha1RepoCreds
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1RepoCreds class.
        /// </summary>
        public V1alpha1RepoCreds()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1RepoCreds class.
        /// </summary>
        /// <param name="githubAppEnterpriseBaseUrl">GithubAppEnterpriseBaseURL
        /// specifies the GitHub API URL for GitHub app authentication. If
        /// empty will default to https://api.github.com</param>
        /// <param name="githubAppID">GithubAppId specifies the Github App ID
        /// of the app used to access the repo for GitHub app
        /// authentication</param>
        /// <param name="githubAppInstallationID">GithubAppInstallationId
        /// specifies the ID of the installed GitHub App for GitHub app
        /// authentication</param>
        /// <param name="githubAppPrivateKey">GithubAppPrivateKey specifies the
        /// private key PEM data for authentication via GitHub app</param>
        /// <param name="password">Password for authenticating at the repo
        /// server</param>
        /// <param name="sshPrivateKey">SSHPrivateKey contains the private key
        /// data for authenticating at the repo server using SSH (only Git
        /// repos)</param>
        /// <param name="tlsClientCertData">TLSClientCertData specifies the TLS
        /// client cert data for authenticating at the repo server</param>
        /// <param name="tlsClientCertKey">TLSClientCertKey specifies the TLS
        /// client cert key for authenticating at the repo server</param>
        /// <param name="url">URL is the URL that this credentials matches
        /// to</param>
        /// <param name="username">Username for authenticating at the repo
        /// server</param>
        public V1alpha1RepoCreds(string githubAppEnterpriseBaseUrl = default(string), string githubAppID = default(string), string githubAppInstallationID = default(string), string githubAppPrivateKey = default(string), string password = default(string), string sshPrivateKey = default(string), string tlsClientCertData = default(string), string tlsClientCertKey = default(string), string url = default(string), string username = default(string))
        {
            GithubAppEnterpriseBaseUrl = githubAppEnterpriseBaseUrl;
            GithubAppID = githubAppID;
            GithubAppInstallationID = githubAppInstallationID;
            GithubAppPrivateKey = githubAppPrivateKey;
            Password = password;
            SshPrivateKey = sshPrivateKey;
            TlsClientCertData = tlsClientCertData;
            TlsClientCertKey = tlsClientCertKey;
            Url = url;
            Username = username;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets githubAppEnterpriseBaseURL specifies the GitHub API
        /// URL for GitHub app authentication. If empty will default to
        /// https://api.github.com
        /// </summary>
        [JsonProperty(PropertyName = "githubAppEnterpriseBaseUrl")]
        public string GithubAppEnterpriseBaseUrl { get; set; }

        /// <summary>
        /// Gets or sets githubAppId specifies the Github App ID of the app
        /// used to access the repo for GitHub app authentication
        /// </summary>
        [JsonProperty(PropertyName = "githubAppID")]
        public string GithubAppID { get; set; }

        /// <summary>
        /// Gets or sets githubAppInstallationId specifies the ID of the
        /// installed GitHub App for GitHub app authentication
        /// </summary>
        [JsonProperty(PropertyName = "githubAppInstallationID")]
        public string GithubAppInstallationID { get; set; }

        /// <summary>
        /// Gets or sets githubAppPrivateKey specifies the private key PEM data
        /// for authentication via GitHub app
        /// </summary>
        [JsonProperty(PropertyName = "githubAppPrivateKey")]
        public string GithubAppPrivateKey { get; set; }

        /// <summary>
        /// Gets or sets password for authenticating at the repo server
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets sSHPrivateKey contains the private key data for
        /// authenticating at the repo server using SSH (only Git repos)
        /// </summary>
        [JsonProperty(PropertyName = "sshPrivateKey")]
        public string SshPrivateKey { get; set; }

        /// <summary>
        /// Gets or sets tLSClientCertData specifies the TLS client cert data
        /// for authenticating at the repo server
        /// </summary>
        [JsonProperty(PropertyName = "tlsClientCertData")]
        public string TlsClientCertData { get; set; }

        /// <summary>
        /// Gets or sets tLSClientCertKey specifies the TLS client cert key for
        /// authenticating at the repo server
        /// </summary>
        [JsonProperty(PropertyName = "tlsClientCertKey")]
        public string TlsClientCertKey { get; set; }

        /// <summary>
        /// Gets or sets URL is the URL that this credentials matches to
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets username for authenticating at the repo server
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

    }
}
