// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// KsonnetAppSpec contains Ksonnet app response
    /// This roughly reflects: ksonnet/ksonnet/metadata/app/schema.go
    /// </summary>
    public partial class RepositoryKsonnetAppSpec
    {
        /// <summary>
        /// Initializes a new instance of the RepositoryKsonnetAppSpec class.
        /// </summary>
        public RepositoryKsonnetAppSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RepositoryKsonnetAppSpec class.
        /// </summary>
        public RepositoryKsonnetAppSpec(IDictionary<string, RepositoryKsonnetEnvironment> environments = default(IDictionary<string, RepositoryKsonnetEnvironment>), string name = default(string), IList<V1alpha1KsonnetParameter> parameters = default(IList<V1alpha1KsonnetParameter>))
        {
            Environments = environments;
            Name = name;
            Parameters = parameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "environments")]
        public IDictionary<string, RepositoryKsonnetEnvironment> Environments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<V1alpha1KsonnetParameter> Parameters { get; set; }

    }
}
