// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ResourceResult holds the operation result details of a specific
    /// resource
    /// </summary>
    public partial class V1alpha1ResourceResult
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceResult class.
        /// </summary>
        public V1alpha1ResourceResult()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceResult class.
        /// </summary>
        /// <param name="group">Group specifies the API group of the
        /// resource</param>
        /// <param name="hookPhase">HookPhase contains the state of any
        /// operation associated with this resource OR hook
        /// This can also contain values for non-hook resources.</param>
        /// <param name="hookType">HookType specifies the type of the hook.
        /// Empty for non-hook resources</param>
        /// <param name="kind">Kind specifies the API kind of the
        /// resource</param>
        /// <param name="message">Message contains an informational or error
        /// message for the last sync OR operation</param>
        /// <param name="name">Name specifies the name of the resource</param>
        /// <param name="namespaceProperty">Namespace specifies the target
        /// namespace of the resource</param>
        /// <param name="status">Status holds the final result of the sync.
        /// Will be empty if the resources is yet to be applied/pruned and is
        /// always zero-value for hooks</param>
        /// <param name="syncPhase">SyncPhase indicates the particular phase of
        /// the sync that this result was acquired in</param>
        /// <param name="version">Version specifies the API version of the
        /// resource</param>
        public V1alpha1ResourceResult(string group = default(string), string hookPhase = default(string), string hookType = default(string), string kind = default(string), string message = default(string), string name = default(string), string namespaceProperty = default(string), string status = default(string), string syncPhase = default(string), string version = default(string))
        {
            Group = group;
            HookPhase = hookPhase;
            HookType = hookType;
            Kind = kind;
            Message = message;
            Name = name;
            NamespaceProperty = namespaceProperty;
            Status = status;
            SyncPhase = syncPhase;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets group specifies the API group of the resource
        /// </summary>
        [JsonProperty(PropertyName = "group")]
        public string Group { get; set; }

        /// <summary>
        /// Gets or sets hookPhase contains the state of any operation
        /// associated with this resource OR hook
        /// This can also contain values for non-hook resources.
        /// </summary>
        [JsonProperty(PropertyName = "hookPhase")]
        public string HookPhase { get; set; }

        /// <summary>
        /// Gets or sets hookType specifies the type of the hook. Empty for
        /// non-hook resources
        /// </summary>
        [JsonProperty(PropertyName = "hookType")]
        public string HookType { get; set; }

        /// <summary>
        /// Gets or sets kind specifies the API kind of the resource
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets message contains an informational or error message for
        /// the last sync OR operation
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets name specifies the name of the resource
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets namespace specifies the target namespace of the
        /// resource
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets status holds the final result of the sync. Will be
        /// empty if the resources is yet to be applied/pruned and is always
        /// zero-value for hooks
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets syncPhase indicates the particular phase of the sync
        /// that this result was acquired in
        /// </summary>
        [JsonProperty(PropertyName = "syncPhase")]
        public string SyncPhase { get; set; }

        /// <summary>
        /// Gets or sets version specifies the API version of the resource
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

    }
}
