/*
 * VirtoCommerce.SaaS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using VirtoCloud.Client.Model;
using VirtoCloud.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace VirtoCloud.Client.Test.Model
{
    /// <summary>
    ///  Class for testing CloudEnvironment
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CloudEnvironmentTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CloudEnvironment
        //private CloudEnvironment instance;

        public CloudEnvironmentTests()
        {
            // TODO uncomment below to create an instance of CloudEnvironment
            //instance = new CloudEnvironment();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CloudEnvironment
        /// </summary>
        [Fact]
        public void CloudEnvironmentInstanceTest()
        {
            // TODO uncomment below to test "IsType" CloudEnvironment
            //Assert.IsType<CloudEnvironment>(instance);
        }

        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }

        /// <summary>
        /// Test the property 'AppProjectId'
        /// </summary>
        [Fact]
        public void AppProjectIdTest()
        {
            // TODO unit test for the property 'AppProjectId'
        }

        /// <summary>
        /// Test the property 'MetadataName'
        /// </summary>
        [Fact]
        public void MetadataNameTest()
        {
            // TODO unit test for the property 'MetadataName'
        }

        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'SyncStatus'
        /// </summary>
        [Fact]
        public void SyncStatusTest()
        {
            // TODO unit test for the property 'SyncStatus'
        }

        /// <summary>
        /// Test the property 'Created'
        /// </summary>
        [Fact]
        public void CreatedTest()
        {
            // TODO unit test for the property 'Created'
        }

        /// <summary>
        /// Test the property 'Updated'
        /// </summary>
        [Fact]
        public void UpdatedTest()
        {
            // TODO unit test for the property 'Updated'
        }

        /// <summary>
        /// Test the property 'Urls'
        /// </summary>
        [Fact]
        public void UrlsTest()
        {
            // TODO unit test for the property 'Urls'
        }

        /// <summary>
        /// Test the property 'Helm'
        /// </summary>
        [Fact]
        public void HelmTest()
        {
            // TODO unit test for the property 'Helm'
        }
    }
}
