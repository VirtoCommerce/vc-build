// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ResourceDiff holds the diff of a live and target resource object
    /// TODO: describe members of this type
    /// </summary>
    public partial class V1alpha1ResourceDiff
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceDiff class.
        /// </summary>
        public V1alpha1ResourceDiff()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1ResourceDiff class.
        /// </summary>
        /// <param name="diff">Diff contains the JSON patch between target and
        /// live resource
        /// Deprecated: use NormalizedLiveState and PredictedLiveState to
        /// render the difference</param>
        /// <param name="liveState">TargetState contains the JSON live resource
        /// manifest</param>
        /// <param name="normalizedLiveState">NormalizedLiveState contains JSON
        /// serialized live resource state with applied normalizations</param>
        /// <param name="predictedLiveState">PredictedLiveState contains JSON
        /// serialized resource state that is calculated based on normalized
        /// and target resource state</param>
        /// <param name="targetState">TargetState contains the JSON serialized
        /// resource manifest defined in the Git/Helm</param>
        public V1alpha1ResourceDiff(string diff = default(string), string group = default(string), bool? hook = default(bool?), string kind = default(string), string liveState = default(string), bool? modified = default(bool?), string name = default(string), string namespaceProperty = default(string), string normalizedLiveState = default(string), string predictedLiveState = default(string), string resourceVersion = default(string), string targetState = default(string))
        {
            Diff = diff;
            Group = group;
            Hook = hook;
            Kind = kind;
            LiveState = liveState;
            Modified = modified;
            Name = name;
            NamespaceProperty = namespaceProperty;
            NormalizedLiveState = normalizedLiveState;
            PredictedLiveState = predictedLiveState;
            ResourceVersion = resourceVersion;
            TargetState = targetState;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets diff contains the JSON patch between target and live
        /// resource
        /// Deprecated: use NormalizedLiveState and PredictedLiveState to
        /// render the difference
        /// </summary>
        [JsonProperty(PropertyName = "diff")]
        public string Diff { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "group")]
        public string Group { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hook")]
        public bool? Hook { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets targetState contains the JSON live resource manifest
        /// </summary>
        [JsonProperty(PropertyName = "liveState")]
        public string LiveState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modified")]
        public bool? Modified { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "namespace")]
        public string NamespaceProperty { get; set; }

        /// <summary>
        /// Gets or sets normalizedLiveState contains JSON serialized live
        /// resource state with applied normalizations
        /// </summary>
        [JsonProperty(PropertyName = "normalizedLiveState")]
        public string NormalizedLiveState { get; set; }

        /// <summary>
        /// Gets or sets predictedLiveState contains JSON serialized resource
        /// state that is calculated based on normalized and target resource
        /// state
        /// </summary>
        [JsonProperty(PropertyName = "predictedLiveState")]
        public string PredictedLiveState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resourceVersion")]
        public string ResourceVersion { get; set; }

        /// <summary>
        /// Gets or sets targetState contains the JSON serialized resource
        /// manifest defined in the Git/Helm
        /// </summary>
        [JsonProperty(PropertyName = "targetState")]
        public string TargetState { get; set; }

    }
}
