// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ArgoCD.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// ApplicationStatus contains status information for the application
    /// </summary>
    public partial class V1alpha1ApplicationStatus
    {
        /// <summary>
        /// Initializes a new instance of the V1alpha1ApplicationStatus class.
        /// </summary>
        public V1alpha1ApplicationStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the V1alpha1ApplicationStatus class.
        /// </summary>
        /// <param name="conditions">Conditions is a list of currently observed
        /// application conditions</param>
        /// <param name="history">History contains information about the
        /// application's sync history</param>
        /// <param name="resources">Resources is a list of Kubernetes resources
        /// managed by this application</param>
        /// <param name="sourceType">SourceType specifies the type of this
        /// application</param>
        public V1alpha1ApplicationStatus(IList<V1alpha1ApplicationCondition> conditions = default(IList<V1alpha1ApplicationCondition>), V1alpha1HealthStatus health = default(V1alpha1HealthStatus), IList<V1alpha1RevisionHistory> history = default(IList<V1alpha1RevisionHistory>), V1Time observedAt = default(V1Time), V1alpha1OperationState operationState = default(V1alpha1OperationState), V1Time reconciledAt = default(V1Time), IList<V1alpha1ResourceStatus> resources = default(IList<V1alpha1ResourceStatus>), string sourceType = default(string), V1alpha1ApplicationSummary summary = default(V1alpha1ApplicationSummary), V1alpha1SyncStatus sync = default(V1alpha1SyncStatus))
        {
            Conditions = conditions;
            Health = health;
            History = history;
            ObservedAt = observedAt;
            OperationState = operationState;
            ReconciledAt = reconciledAt;
            Resources = resources;
            SourceType = sourceType;
            Summary = summary;
            Sync = sync;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets conditions is a list of currently observed application
        /// conditions
        /// </summary>
        [JsonProperty(PropertyName = "conditions")]
        public IList<V1alpha1ApplicationCondition> Conditions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "health")]
        public V1alpha1HealthStatus Health { get; set; }

        /// <summary>
        /// Gets or sets history contains information about the application's
        /// sync history
        /// </summary>
        [JsonProperty(PropertyName = "history")]
        public IList<V1alpha1RevisionHistory> History { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "observedAt")]
        public V1Time ObservedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operationState")]
        public V1alpha1OperationState OperationState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reconciledAt")]
        public V1Time ReconciledAt { get; set; }

        /// <summary>
        /// Gets or sets resources is a list of Kubernetes resources managed by
        /// this application
        /// </summary>
        [JsonProperty(PropertyName = "resources")]
        public IList<V1alpha1ResourceStatus> Resources { get; set; }

        /// <summary>
        /// Gets or sets sourceType specifies the type of this application
        /// </summary>
        [JsonProperty(PropertyName = "sourceType")]
        public string SourceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "summary")]
        public V1alpha1ApplicationSummary Summary { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sync")]
        public V1alpha1SyncStatus Sync { get; set; }

    }
}
