/*
 * VirtoCommerce.SaaS
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace VirtoCloud.Client.Model
{
    /// <summary>
    /// EnvironmentNameValidationRequest
    /// </summary>
    [DataContract(Name = "EnvironmentNameValidationRequest")]
    public partial class EnvironmentNameValidationRequest : IEquatable<EnvironmentNameValidationRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EnvironmentNameValidationRequest" /> class.
        /// </summary>
        /// <param name="appProject">appProject.</param>
        /// <param name="name">name.</param>
        public EnvironmentNameValidationRequest(string appProject = default(string), string name = default(string))
        {
            this.AppProject = appProject;
            this.Name = name;
        }

        /// <summary>
        /// Gets or Sets AppProject
        /// </summary>
        [DataMember(Name = "appProject", EmitDefaultValue = true)]
        public string AppProject { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EnvironmentNameValidationRequest {\n");
            sb.Append("  AppProject: ").Append(AppProject).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EnvironmentNameValidationRequest);
        }

        /// <summary>
        /// Returns true if EnvironmentNameValidationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of EnvironmentNameValidationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EnvironmentNameValidationRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.AppProject == input.AppProject ||
                    (this.AppProject != null &&
                    this.AppProject.Equals(input.AppProject))
                ) &&
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppProject != null)
                {
                    hashCode = (hashCode * 59) + this.AppProject.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
